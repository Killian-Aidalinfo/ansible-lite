name: Build and Release .deb

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-deb-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Import GPG key
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --batch --yes --import

    - name: Install reprepro
      run: |
        sudo apt-get update
        sudo apt-get install -y reprepro
        
    - name: Set up Golang
      uses: actions/setup-go@v2
      with:
        go-version: '1.19'

    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION="${GITHUB_REF#refs/tags/}"
        VERSION="${VERSION#v}" # Remove 'v' if it exists
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build the binary
      run: |
        cd ansible-lite-binary
        GOOS=linux GOARCH=amd64 go build -o ansible-lite ./cmd/

    # **Créer le paquet non versionné (`ansible-lite`)**
    - name: Prepare unversioned package structure
      run: |
        mkdir -p ansible-lite-debian/usr/local/bin
        cp ansible-lite-binary/ansible-lite ansible-lite-debian/usr/local/bin/

        # Mettre à jour le fichier control
        sed -i "s/^Version:.*/Version: ${{ env.VERSION }}/" ansible-lite-debian/DEBIAN/control
        sed -i "s/^Package:.*/Package: ansible-lite/" ansible-lite-debian/DEBIAN/control

        # Mettre à jour les scripts DEBIAN si nécessaire
        chmod 0755 ansible-lite-debian/DEBIAN/postinst
        chmod 0755 ansible-lite-debian/DEBIAN/prerm

    - name: Build the unversioned .deb package
      run: |
        dpkg-deb --build ansible-lite-debian
        mv ansible-lite-debian.deb ansible-lite_amd64.deb

    # **Créer le paquet versionné (`ansible-lite-${VERSION}`)**
    - name: Prepare versioned package structure
      run: |
        cp -r ansible-lite-debian ansible-lite-${{ env.VERSION }}-debian
        sed -i "s/^Package:.*/Package: ansible-lite-${{ env.VERSION }}/" ansible-lite-${{ env.VERSION }}-debian/DEBIAN/control

    - name: Build the versioned .deb package
      run: |
        dpkg-deb --build ansible-lite-${{ env.VERSION }}-debian
        mv ansible-lite-${{ env.VERSION }}-debian.deb ansible-lite-${{ env.VERSION }}_amd64.deb


    - name: Checkout apt repository (aidalinfo-source)
      uses: actions/checkout@v2
      with:
        repository: aidalinfo/aidalinfo-source
        ref: main
        path: aidalinfo-source


    - name: Add packages to APT repository using reprepro
      run: |
        # Inclure le paquet non versionné
        reprepro -b aidalinfo-source includedeb stable ansible-lite_amd64.deb

        # Inclure le paquet versionné
        reprepro -b aidalinfo-source includedeb stable ansible-lite-${{ env.VERSION }}_amd64.deb

        reprepro -b aidalinfo-source export

    - name: Setup SSH agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Push changes to the apt repository
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        cd aidalinfo-source
        git remote set-url origin git@github.com:aidalinfo/aidalinfo-source.git
        git add .
        git commit -m "Update APT repository with new version ${{ env.VERSION }}"
        git push origin main

    - name: Create release and upload artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ansible-lite-binary/ansible-lite
          ansible-lite_amd64.deb

      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
