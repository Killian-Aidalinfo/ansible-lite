name: Build and Release .deb

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-deb-package:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Set up Golang
      uses: actions/setup-go@v2
      with:
        go-version: '1.19'

    - name: Build the binary
      run: |
        cd ansible-lite-binary
        GOOS=linux GOARCH=amd64 go build -o ansible-lite ./cmd/

    - name: Create the package structure
      run: |
        mkdir -p ansible-lite-debian/usr/local/bin
        cp ansible-lite-binary/ansible-lite ansible-lite-debian/usr/local/bin/

    - name: Set permissions for DEBIAN scripts
      run: |
        chmod 0755 ansible-lite-debian/DEBIAN/postinst
        chmod 0755 ansible-lite-debian/DEBIAN/prerm

    - name: Build the .deb package
      run: |
        dpkg-deb --build ansible-lite-debian
        mv ansible-lite-debian.deb ansible-lite-amd64.deb

    - name: Checkout apt repository (aidalinfo-source)
      uses: actions/checkout@v2
      with:
        repository: aidalinfo/aidalinfo-source
        ref: main
        path: aidalinfo-source

    - name: Ensure necessary directories exist in the APT repository
      run: |
        mkdir -p aidalinfo-source/pool/main/a/ansible-lite/
        mkdir -p aidalinfo-source/dists/stable/main/binary-amd64/

    - name: Copy the .deb file to the apt repository
      run: |
        cp ansible-lite-amd64.deb aidalinfo-source/pool/main/a/ansible-lite/

    - name: Update the Packages file
      run: |
        cd aidalinfo-source
        dpkg-scanpackages pool/main/ > dists/stable/main/binary-amd64/Packages

    - name: Sign the Release file with GPG
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --import
        cd aidalinfo-source
        gpg --default-key "D361D1BC6756F07C94E33ADD4786BE349F3F47A6" --output dists/stable/Release.gpg --detach-sign dists/stable/Release

    - name: Push changes to the apt repository
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        cd aidalinfo-source
        git add .
        git commit -m "Update APT repository with new version"
        git push origin main
        
    - name: Create release and upload artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ansible-lite-binary/ansible-lite
          ansible-lite-amd64.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}